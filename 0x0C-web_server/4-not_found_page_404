#!/usr/bin/env bash
# configures an Nginx server to ensure /redirect_me redirects to another page.
# Redirection is configured as a "301 Moved Permanently"
# Includes a custom 404 page with "Ceci n'est pas une page".

#  updates the package lists for available software packages.
apt-get update
# installs the Nginx web server.
apt-get install -y nginx

# Creates the /etc/nginx/html dir, serving as the document root dir for Nginx.
mkdir /etc/nginx/html
#  creates an empty index.html file inside the /etc/nginx/html dir.
touch /etc/nginx/html/index.html
#  seting content of the index.html file to "Hello World!" using echo command.
echo "Hello World!" > /etc/nginx/html/index.html
# Setting Nginx to listen on port 80 and serve files from the /etc/nginx/html dir.
printf %s "server {
     listen      80 default_server;
     listen      [::]:80 default_server;
     root        /etc/nginx/html;
     index       index.html index.htm;
}
" > /etc/nginx/sites-available/default

#  creating an empty file named 404.html inside the /etc/nginx/html dir.
touch /etc/nginx/html/404.html

# Paste a 404 response in the 404.html file
echo "Ceci n'est pas une page" | sudo tee /etc/nginx/html/404.html

# Display script completion message
echo "Nginx installation and configuration completed."

# Create a config file for the redirection
echo "server {
    listen      80;
    listen      [::]:80;
    root        /etc/nginx/html;
    index       index.html index.htm;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }

    error_page 404 /404.html;
    location /404 {
      root /etc/nginx/html;
      internal;
    }

}" | sudo tee /etc/nginx/sites-available/default

# Enable the new site config
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Test nginx config and reload
sudo nginx -t
sudo service nginx reload
